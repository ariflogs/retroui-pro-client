/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as OrganizationRouteImport } from './routes/organization'
import { Route as MagicLinkSentRouteImport } from './routes/magic-link-sent'
import { Route as InviteRouteImport } from './routes/invite'
import { Route as FigmaRouteImport } from './routes/figma'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as CheckoutSuccessRouteImport } from './routes/checkout-success'
import { Route as CheckoutFailedRouteImport } from './routes/checkout-failed'
import { Route as BlocksRouteImport } from './routes/blocks'
import { Route as AuthVerifyRouteImport } from './routes/auth-verify'
import { Route as AffiliateRouteImport } from './routes/affiliate'
import { Route as AccountRouteImport } from './routes/account'
import { Route as SlugRouteImport } from './routes/$slug'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PreviewSlugRouteImport } from './routes/preview/$slug'

const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizationRoute = OrganizationRouteImport.update({
  id: '/organization',
  path: '/organization',
  getParentRoute: () => rootRouteImport,
} as any)
const MagicLinkSentRoute = MagicLinkSentRouteImport.update({
  id: '/magic-link-sent',
  path: '/magic-link-sent',
  getParentRoute: () => rootRouteImport,
} as any)
const InviteRoute = InviteRouteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => rootRouteImport,
} as any)
const FigmaRoute = FigmaRouteImport.update({
  id: '/figma',
  path: '/figma',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutSuccessRoute = CheckoutSuccessRouteImport.update({
  id: '/checkout-success',
  path: '/checkout-success',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutFailedRoute = CheckoutFailedRouteImport.update({
  id: '/checkout-failed',
  path: '/checkout-failed',
  getParentRoute: () => rootRouteImport,
} as any)
const BlocksRoute = BlocksRouteImport.update({
  id: '/blocks',
  path: '/blocks',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth-verify',
  path: '/auth-verify',
  getParentRoute: () => rootRouteImport,
} as any)
const AffiliateRoute = AffiliateRouteImport.update({
  id: '/affiliate',
  path: '/affiliate',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const SlugRoute = SlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewSlugRoute = PreviewSlugRouteImport.update({
  id: '/preview/$slug',
  path: '/preview/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/account': typeof AccountRoute
  '/affiliate': typeof AffiliateRoute
  '/auth-verify': typeof AuthVerifyRoute
  '/blocks': typeof BlocksRoute
  '/checkout-failed': typeof CheckoutFailedRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/demo': typeof DemoRoute
  '/figma': typeof FigmaRoute
  '/invite': typeof InviteRoute
  '/magic-link-sent': typeof MagicLinkSentRoute
  '/organization': typeof OrganizationRoute
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRoute
  '/templates': typeof TemplatesRoute
  '/preview/$slug': typeof PreviewSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/account': typeof AccountRoute
  '/affiliate': typeof AffiliateRoute
  '/auth-verify': typeof AuthVerifyRoute
  '/blocks': typeof BlocksRoute
  '/checkout-failed': typeof CheckoutFailedRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/demo': typeof DemoRoute
  '/figma': typeof FigmaRoute
  '/invite': typeof InviteRoute
  '/magic-link-sent': typeof MagicLinkSentRoute
  '/organization': typeof OrganizationRoute
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRoute
  '/templates': typeof TemplatesRoute
  '/preview/$slug': typeof PreviewSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/account': typeof AccountRoute
  '/affiliate': typeof AffiliateRoute
  '/auth-verify': typeof AuthVerifyRoute
  '/blocks': typeof BlocksRoute
  '/checkout-failed': typeof CheckoutFailedRoute
  '/checkout-success': typeof CheckoutSuccessRoute
  '/demo': typeof DemoRoute
  '/figma': typeof FigmaRoute
  '/invite': typeof InviteRoute
  '/magic-link-sent': typeof MagicLinkSentRoute
  '/organization': typeof OrganizationRoute
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRoute
  '/templates': typeof TemplatesRoute
  '/preview/$slug': typeof PreviewSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$slug'
    | '/account'
    | '/affiliate'
    | '/auth-verify'
    | '/blocks'
    | '/checkout-failed'
    | '/checkout-success'
    | '/demo'
    | '/figma'
    | '/invite'
    | '/magic-link-sent'
    | '/organization'
    | '/pricing'
    | '/sign-in'
    | '/templates'
    | '/preview/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$slug'
    | '/account'
    | '/affiliate'
    | '/auth-verify'
    | '/blocks'
    | '/checkout-failed'
    | '/checkout-success'
    | '/demo'
    | '/figma'
    | '/invite'
    | '/magic-link-sent'
    | '/organization'
    | '/pricing'
    | '/sign-in'
    | '/templates'
    | '/preview/$slug'
  id:
    | '__root__'
    | '/'
    | '/$slug'
    | '/account'
    | '/affiliate'
    | '/auth-verify'
    | '/blocks'
    | '/checkout-failed'
    | '/checkout-success'
    | '/demo'
    | '/figma'
    | '/invite'
    | '/magic-link-sent'
    | '/organization'
    | '/pricing'
    | '/sign-in'
    | '/templates'
    | '/preview/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SlugRoute: typeof SlugRoute
  AccountRoute: typeof AccountRoute
  AffiliateRoute: typeof AffiliateRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  BlocksRoute: typeof BlocksRoute
  CheckoutFailedRoute: typeof CheckoutFailedRoute
  CheckoutSuccessRoute: typeof CheckoutSuccessRoute
  DemoRoute: typeof DemoRoute
  FigmaRoute: typeof FigmaRoute
  InviteRoute: typeof InviteRoute
  MagicLinkSentRoute: typeof MagicLinkSentRoute
  OrganizationRoute: typeof OrganizationRoute
  PricingRoute: typeof PricingRoute
  SignInRoute: typeof SignInRoute
  TemplatesRoute: typeof TemplatesRoute
  PreviewSlugRoute: typeof PreviewSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organization': {
      id: '/organization'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof OrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/magic-link-sent': {
      id: '/magic-link-sent'
      path: '/magic-link-sent'
      fullPath: '/magic-link-sent'
      preLoaderRoute: typeof MagicLinkSentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/invite': {
      id: '/invite'
      path: '/invite'
      fullPath: '/invite'
      preLoaderRoute: typeof InviteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/figma': {
      id: '/figma'
      path: '/figma'
      fullPath: '/figma'
      preLoaderRoute: typeof FigmaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout-success': {
      id: '/checkout-success'
      path: '/checkout-success'
      fullPath: '/checkout-success'
      preLoaderRoute: typeof CheckoutSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout-failed': {
      id: '/checkout-failed'
      path: '/checkout-failed'
      fullPath: '/checkout-failed'
      preLoaderRoute: typeof CheckoutFailedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blocks': {
      id: '/blocks'
      path: '/blocks'
      fullPath: '/blocks'
      preLoaderRoute: typeof BlocksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth-verify': {
      id: '/auth-verify'
      path: '/auth-verify'
      fullPath: '/auth-verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/affiliate': {
      id: '/affiliate'
      path: '/affiliate'
      fullPath: '/affiliate'
      preLoaderRoute: typeof AffiliateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$slug': {
      id: '/$slug'
      path: '/$slug'
      fullPath: '/$slug'
      preLoaderRoute: typeof SlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/$slug': {
      id: '/preview/$slug'
      path: '/preview/$slug'
      fullPath: '/preview/$slug'
      preLoaderRoute: typeof PreviewSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SlugRoute: SlugRoute,
  AccountRoute: AccountRoute,
  AffiliateRoute: AffiliateRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  BlocksRoute: BlocksRoute,
  CheckoutFailedRoute: CheckoutFailedRoute,
  CheckoutSuccessRoute: CheckoutSuccessRoute,
  DemoRoute: DemoRoute,
  FigmaRoute: FigmaRoute,
  InviteRoute: InviteRoute,
  MagicLinkSentRoute: MagicLinkSentRoute,
  OrganizationRoute: OrganizationRoute,
  PricingRoute: PricingRoute,
  SignInRoute: SignInRoute,
  TemplatesRoute: TemplatesRoute,
  PreviewSlugRoute: PreviewSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
